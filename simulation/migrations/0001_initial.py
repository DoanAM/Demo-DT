# Generated by Django 4.1.3 on 2023-03-19 16:36

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import simulation.models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Simulation",
            fields=[
                ("sim_ID", models.AutoField(primary_key=True, serialize=False)),
                ("timestamp", models.BigIntegerField(db_column="Timestamp")),
                (
                    "nc_file",
                    models.FileField(
                        blank=True, null=True, upload_to=simulation.models.upload_path
                    ),
                ),
                ("csv_file", models.FileField(blank=True, null=True, upload_to="")),
                ("precision", models.FloatField(blank=True, null=True)),
                ("finished", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="PredictedData",
            fields=[
                (
                    "Timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "XCurrPos",
                    models.FloatField(blank=True, db_column="XCurrPos", null=True),
                ),
                (
                    "YCurrPos",
                    models.FloatField(blank=True, db_column="YCurrPos", null=True),
                ),
                (
                    "ZCurrPos",
                    models.FloatField(blank=True, db_column="ZCurrPos", null=True),
                ),
                (
                    "S1Actrev",
                    models.FloatField(blank=True, db_column="S1Actrev", null=True),
                ),
                (
                    "Actfeed",
                    models.FloatField(blank=True, db_column="Actfeed", null=True),
                ),
                ("Area", models.FloatField(blank=True, db_column="Area", null=True)),
                (
                    "ToolID",
                    models.IntegerField(blank=True, db_column="ToolID", null=True),
                ),
                ("Depth", models.FloatField(blank=True, db_column="Depth", null=True)),
                ("Width", models.FloatField(blank=True, db_column="Width", null=True)),
                (
                    "Removal_Volume",
                    models.FloatField(
                        blank=True, db_column="Removal_Volume", null=True
                    ),
                ),
                (
                    "Angles",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.FloatField(),
                        blank=True,
                        db_column="Angles",
                        null=True,
                        size=None,
                    ),
                ),
                (
                    "S1ActAccel",
                    models.FloatField(blank=True, db_column="S1ActAccel", null=True),
                ),
                (
                    "XCurrVel",
                    models.FloatField(blank=True, db_column="XCurrVel", null=True),
                ),
                (
                    "XCurrAccel",
                    models.FloatField(blank=True, db_column="XCurrAccel", null=True),
                ),
                (
                    "YCurrVel",
                    models.FloatField(blank=True, db_column="YCurrVel", null=True),
                ),
                (
                    "YCurrAccel",
                    models.FloatField(blank=True, db_column="YCurrAccel", null=True),
                ),
                (
                    "ZCurrVel",
                    models.FloatField(blank=True, db_column="ZCurrVel", null=True),
                ),
                (
                    "ZCurrAccel",
                    models.FloatField(blank=True, db_column="ZCurrAccel", null=True),
                ),
                (
                    "Angle_Mean",
                    models.FloatField(blank=True, db_column="Angle_Mean", null=True),
                ),
                (
                    "Angle_Sin",
                    models.FloatField(blank=True, db_column="Angle_Sin", null=True),
                ),
                (
                    "Angle_Cos",
                    models.FloatField(blank=True, db_column="Angle_Cos", null=True),
                ),
                (
                    "ChipThickness",
                    models.FloatField(blank=True, db_column="ChipThickness", null=True),
                ),
                (
                    "taskID",
                    models.IntegerField(blank=True, db_column="taskID", null=True),
                ),
                (
                    "PredOriginS1ActTrq",
                    models.FloatField(
                        blank=True, db_column="PredOriginS1ActTrq", null=True
                    ),
                ),
                (
                    "PredOriginXActTrq",
                    models.FloatField(
                        blank=True, db_column="PredOriginXActTrq", null=True
                    ),
                ),
                (
                    "PredOriginYActTrq",
                    models.FloatField(
                        blank=True, db_column="PredOriginYActTrq", null=True
                    ),
                ),
                (
                    "PredOriginY2ActTrq",
                    models.FloatField(
                        blank=True, db_column="PredOriginY2ActTrq", null=True
                    ),
                ),
                (
                    "PredOriginZActTrq",
                    models.FloatField(
                        blank=True, db_column="PredOriginZActTrq", null=True
                    ),
                ),
                (
                    "stlPath",
                    models.FileField(
                        blank=True, max_length=255, null=True, upload_to=""
                    ),
                ),
                (
                    "simulation",
                    models.ForeignKey(
                        db_column="Simulation",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="simulation.simulation",
                    ),
                ),
            ],
        ),
    ]
