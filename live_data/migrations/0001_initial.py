# Generated by Django 4.1.3 on 2022-11-23 09:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Auxiliary",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "activatemicrojetmediumexternal2",
                    models.BooleanField(
                        blank=True,
                        db_column="ActivateMicrojetMediumExternal2",
                        null=True,
                    ),
                ),
                (
                    "activatemicrojetmediuminternal2",
                    models.BooleanField(
                        blank=True,
                        db_column="ActivateMicrojetMediumInternal2",
                        null=True,
                    ),
                ),
                (
                    "vacuumactivate",
                    models.BooleanField(
                        blank=True, db_column="VacuumActivate", null=True
                    ),
                ),
                (
                    "coolingunitactivate",
                    models.BooleanField(
                        blank=True, db_column="CoolingUnitActivate", null=True
                    ),
                ),
                (
                    "activateblowclearworkpiece",
                    models.BooleanField(
                        blank=True, db_column="ActivateBlowClearWorkpiece", null=True
                    ),
                ),
            ],
            options={
                "db_table": "auxiliary",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cnc",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "xcurrpos",
                    models.IntegerField(blank=True, db_column="XCurrPos", null=True),
                ),
                (
                    "xactpos",
                    models.IntegerField(blank=True, db_column="XActPos", null=True),
                ),
                (
                    "zcurrpos",
                    models.IntegerField(blank=True, db_column="ZCurrPos", null=True),
                ),
                (
                    "zactpos",
                    models.IntegerField(blank=True, db_column="ZActPos", null=True),
                ),
                (
                    "ycurrpos",
                    models.IntegerField(blank=True, db_column="YCurrPos", null=True),
                ),
                (
                    "yactpos",
                    models.IntegerField(blank=True, db_column="YActPos", null=True),
                ),
                (
                    "y2currpos",
                    models.IntegerField(blank=True, db_column="Y2CurrPos", null=True),
                ),
                (
                    "y2actpos",
                    models.IntegerField(blank=True, db_column="Y2ActPos", null=True),
                ),
                (
                    "s1actrev",
                    models.IntegerField(blank=True, db_column="S1Actrev", null=True),
                ),
                (
                    "s1currrev",
                    models.IntegerField(blank=True, db_column="S1Currrev", null=True),
                ),
                (
                    "s1cmdrev",
                    models.IntegerField(blank=True, db_column="S1Cmdrev", null=True),
                ),
                (
                    "actfeed",
                    models.IntegerField(blank=True, db_column="Actfeed", null=True),
                ),
                (
                    "actblocknr",
                    models.IntegerField(blank=True, db_column="Actblocknr", null=True),
                ),
                ("tbvec0", models.IntegerField(blank=True, null=True)),
                ("tbvec1", models.IntegerField(blank=True, null=True)),
                ("tbvec2", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "cnc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Drive",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "xenc2pos",
                    models.IntegerField(blank=True, db_column="XEnc2Pos", null=True),
                ),
                (
                    "xacttrq",
                    models.SmallIntegerField(
                        blank=True, db_column="XActTrq", null=True
                    ),
                ),
                (
                    "xfolldist",
                    models.IntegerField(blank=True, db_column="XFollDist", null=True),
                ),
                (
                    "xenc1vel",
                    models.IntegerField(blank=True, db_column="XEnc1Vel", null=True),
                ),
                (
                    "xenc2vel",
                    models.IntegerField(blank=True, db_column="XEnc2Vel", null=True),
                ),
                (
                    "xenc1pos",
                    models.IntegerField(blank=True, db_column="XEnc1Pos", null=True),
                ),
                (
                    "xenc1acc",
                    models.IntegerField(blank=True, db_column="XEnc1Acc", null=True),
                ),
                (
                    "xvelerror",
                    models.IntegerField(blank=True, db_column="XVelError", null=True),
                ),
                (
                    "xmottemp",
                    models.IntegerField(blank=True, db_column="XMotTemp", null=True),
                ),
                (
                    "zenc2pos",
                    models.IntegerField(blank=True, db_column="ZEnc2Pos", null=True),
                ),
                (
                    "zacttrq",
                    models.SmallIntegerField(
                        blank=True, db_column="ZActTrq", null=True
                    ),
                ),
                (
                    "zfolldist",
                    models.IntegerField(blank=True, db_column="ZFollDist", null=True),
                ),
                (
                    "zenc1vel",
                    models.IntegerField(blank=True, db_column="ZEnc1Vel", null=True),
                ),
                (
                    "zenc2vel",
                    models.IntegerField(blank=True, db_column="ZEnc2Vel", null=True),
                ),
                (
                    "zenc1pos",
                    models.IntegerField(blank=True, db_column="ZEnc1Pos", null=True),
                ),
                (
                    "zenc1acc",
                    models.IntegerField(blank=True, db_column="ZEnc1Acc", null=True),
                ),
                (
                    "zvelerror",
                    models.IntegerField(blank=True, db_column="ZVelError", null=True),
                ),
                (
                    "zmottemp",
                    models.IntegerField(blank=True, db_column="ZMotTemp", null=True),
                ),
                (
                    "yenc2pos",
                    models.IntegerField(blank=True, db_column="YEnc2Pos", null=True),
                ),
                (
                    "yacttrq",
                    models.SmallIntegerField(
                        blank=True, db_column="YActTrq", null=True
                    ),
                ),
                (
                    "yfolldist",
                    models.IntegerField(blank=True, db_column="YFollDist", null=True),
                ),
                (
                    "yenc1vel",
                    models.IntegerField(blank=True, db_column="YEnc1Vel", null=True),
                ),
                (
                    "yenc2vel",
                    models.IntegerField(blank=True, db_column="YEnc2Vel", null=True),
                ),
                (
                    "yenc1pos",
                    models.IntegerField(blank=True, db_column="YEnc1Pos", null=True),
                ),
                (
                    "yenc1acc",
                    models.IntegerField(blank=True, db_column="YEnc1Acc", null=True),
                ),
                (
                    "yvelerror",
                    models.IntegerField(blank=True, db_column="YVelError", null=True),
                ),
                (
                    "ymottemp",
                    models.IntegerField(blank=True, db_column="YMotTemp", null=True),
                ),
                (
                    "y2enc2pos",
                    models.IntegerField(blank=True, db_column="Y2Enc2Pos", null=True),
                ),
                (
                    "y2acttrq",
                    models.SmallIntegerField(
                        blank=True, db_column="Y2ActTrq", null=True
                    ),
                ),
                (
                    "y2folldist",
                    models.IntegerField(blank=True, db_column="Y2FollDist", null=True),
                ),
                (
                    "y2enc1vel",
                    models.IntegerField(blank=True, db_column="Y2Enc1Vel", null=True),
                ),
                (
                    "y2enc2vel",
                    models.IntegerField(blank=True, db_column="Y2Enc2Vel", null=True),
                ),
                (
                    "y2enc1pos",
                    models.IntegerField(blank=True, db_column="Y2Enc1Pos", null=True),
                ),
                (
                    "y2enc1acc",
                    models.IntegerField(blank=True, db_column="Y2Enc1Acc", null=True),
                ),
                (
                    "y2velerror",
                    models.IntegerField(blank=True, db_column="Y2VelError", null=True),
                ),
                (
                    "y2mottemp",
                    models.IntegerField(blank=True, db_column="Y2MotTemp", null=True),
                ),
                (
                    "s1encpos",
                    models.IntegerField(blank=True, db_column="S1EncPos", null=True),
                ),
                (
                    "s1acttrq",
                    models.SmallIntegerField(
                        blank=True, db_column="S1ActTrq", null=True
                    ),
                ),
                (
                    "s1follerr",
                    models.IntegerField(blank=True, db_column="S1FollErr", null=True),
                ),
            ],
            options={
                "db_table": "drive",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Prog",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "programname",
                    models.CharField(
                        blank=True, db_column="Programname", max_length=81, null=True
                    ),
                ),
                (
                    "materialnnumber",
                    models.IntegerField(
                        blank=True, db_column="Materialnnumber", null=True
                    ),
                ),
                (
                    "serialnumber",
                    models.IntegerField(
                        blank=True, db_column="Serialnumber", null=True
                    ),
                ),
                (
                    "operation",
                    models.IntegerField(blank=True, db_column="Operation", null=True),
                ),
            ],
            options={
                "db_table": "prog",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Tool",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                ("id", models.BigIntegerField(blank=True, db_column="ID", null=True)),
                (
                    "number",
                    models.IntegerField(blank=True, db_column="Number", null=True),
                ),
                ("category", models.CharField(blank=True, max_length=81, null=True)),
                (
                    "artnr",
                    models.CharField(
                        blank=True, db_column="ArtNr", max_length=81, null=True
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, db_column="Name", max_length=81, null=True
                    ),
                ),
                (
                    "length",
                    models.FloatField(blank=True, db_column="Length", null=True),
                ),
                (
                    "diameter",
                    models.FloatField(blank=True, db_column="Diameter", null=True),
                ),
            ],
            options={
                "db_table": "tool",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Wcs",
            fields=[
                (
                    "timestamp",
                    models.BigIntegerField(
                        db_column="Timestamp", primary_key=True, serialize=False
                    ),
                ),
                (
                    "isactive",
                    models.SmallIntegerField(
                        blank=True, db_column="isActive", null=True
                    ),
                ),
                ("x", models.FloatField(blank=True, db_column="X", null=True)),
                ("y", models.FloatField(blank=True, db_column="Y", null=True)),
                ("z", models.FloatField(blank=True, db_column="Z", null=True)),
                ("alpha", models.FloatField(blank=True, null=True)),
                ("beta", models.FloatField(blank=True, null=True)),
                ("gamma", models.FloatField(blank=True, null=True)),
            ],
            options={
                "db_table": "wcs",
                "managed": False,
            },
        ),
    ]
